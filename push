#!/bin/bash


#banner

banner=$(curl -ks "https://pastebin.com/raw/YDXUdWFp")

if [ "$1" == "" ]
then
clear
echo -e "$banner\n\n\n"
echo -e "use: $0 example.com or $0 install"





###############################################################################
elif [ "$1" == "install" ]
then
#instalando...
clear
echo -e "$banner\n\n\n"
echo -e "instalando.."

go install github.com/projectdiscovery/katana/cmd/katana@latest

go install -v github.com/projectdiscovery/alterx/cmd/alterx@latest

go install -v github.com/projectdiscovery/cdncheck/cmd/cdncheck@latest

mkdir brute; cd  brute; wget https://raw.githubusercontent.com/Karanxa/Bug-Bounty-Wordlists/main/api.txt && wget https://raw.githubusercontent.com/Karanxa/Bug-Bounty-Wordlists/main/all-files-leaked.txt && wget https://raw.githubusercontent.com/Karanxa/Bug-Bounty-Wordlists/main/cgi-bin.txt && wget https://raw.githubusercontent.com/Karanxa/Bug-Bounty-Wordlists/main/cgi-files.txt && wget https://raw.githubusercontent.com/Karanxa/Bug-Bounty-Wordlists/main/dotfiles.txt && https://raw.githubusercontent.com/Karanxa/Bug-Bounty-Wordlists/main/git_config.txt; cat * |sort -u >> allfiles
cd ..
mkdir subdomains
cd subdomains
wget "https://raw.githubusercontent.com/danTaler/WordLists/master/Subdomain.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/theMiddleBlue/DNSenum/master/wordlist/subdomains-top1mil-20000.txt" 2>/dev/null
cat * |sort -u >> subs-brute
mv subs-brute ..
cd ..
rm -rf subdomains/
go install github.com/projectdiscovery/asnmap/cmd/asnmap@latest
GO111MODULE=on go install github.com/jaeles-project/gospider@latest

git clone https://github.com/chrislockard/api_wordlist 2>/dev/null
cd api_wordlist

cat * |sort -u >> wordlist-all-api
mv wordlist-all-api ..
cd ..
rm -rf api_wordlist/


mkdir directorys
mv wordlist-all-api directorys
cd directorys
wget "https://gist.githubusercontent.com/yassineaboukir/8e12adefbd505ef704674ad6ad48743d/raw/3ea2b7175f2fcf8e6de835c72cb2b2048f73f847/List%2520of%2520API%2520endpoints%2520&%2520objects" 2>/dev/null
wget "https://gist.githubusercontent.com/helcaraxeals/7c45201b1c957ecea82ef7800da4bfa4/raw/b84a7364f33f2eb14aad68149302077649d70acc/api_wordlist.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/common-api-endpoints-mazen160.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/Karanxa/Bug-Bounty-Wordlists/main/api.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/directory-list-2.3-medium.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/directory-list-2.3-big.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/coldfusion.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/big.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/apache.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/api/api-endpoints.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/Common-PHP-Filenames.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/Common-DB-Backups.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/CGIs.txt" 2>/dev/null
wget "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/Logins.fuzz.txt" 2>/dev/null


cat * |sort -u >> Dir-Fuzz-All
mv Dir-Fuzz-All ..
cd ..
rm -rf directorys/

go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest 2>/dev/null
git clone https://github.com/projectdiscovery/nuclei-templates && rm -f /sec/root/nuclei-templates && mv nuclei-templates /sec/root/

clear
echo -e "$banner\n\n\n"
echo -e "instalado com sucesso!"


####################################################################################################################################


################################################################################
else
clear

target=$(echo -e $1)

echo -e "$banner\n\n\n"
echo -e "Inicializando o scan no target: $target\n\n"

mkdir subs 2>/dev/null
mkdir infos 2>/dev/null


#module subdomain
echo $target|subfinder --all --silent >> subs/subs.$target.tmp
echo $target|assetfinder --subs-only >> subs/subs.$target.tmp
echo $target |dnsgen - |httpx >> subs/subs.$target.tmp
timeout 10 curl -ks "https://crt.sh/?q=$target" |awk -F '>' '{print $2}' |egrep "$target" |awk -F '<' '{print $1}' |egrep -v "\*.|Search" |sort -u >> subs/subs.$target.tmp
timeout 10 cat subs/subs.$target.tmp |egrep -v "@" |sort -u >> subs/subs.$target
#timeout 10 dnsx -silent -d $target -re -cdn -asn -w subdomains-top1mil-20000.txt |egrep "]" >> subs/dnsx.$target &
#ffuf -w subs-brute -u http://FUZZ.$target >> fuzz-subs
#for t in `cat fuzz-subs |grep FUZZ|awk -F ' ' '{print $4}'`;do echo "$t.$target" ;done >> subs/subs.$target
#rm -f fuzz-subs
echo -e "\n\n\nTotal de subdomains encontrados: $(cat subs/subs.$target|sort -u |wc -l)"
cat subs/subs.$target |sort -u |egrep -v "crt.sh"

#module recon hostname/fqdn
for sub in `cat subs/subs.$target`
do
cat subs/subs.$target |rush -j50 "echo {} |cdncheck -resp -silent -cdn -cloud -waf" >> infos/cdncheck &
timeout 10 whatweb $sub >> infos/whatweb.$target.tmp && cat infos/whatweb.$target.tmp |egrep "$target" |sort -u >> infos/whatweb.$target && sleep 0.5 2>/dev/null
timeout 10 wafw00f $sub >> infos/wafw0ff.$target 2>/dev/null
echo $sub |httpx -sc -fr -cl -ct -location -favicon -jarm -rt -lc -wc -title -bp -server -td -method -websocket -ip -cname -asn -cdn -probe >> infos/httpxed.$target 2>/dev/null &
cat subs/subs.$target |naabu -silent -p 1883,8889,443,80,3000,6090,9060,8060,21,111,14430,24430,34430,44430,54430,64430,74430,84430,94430,104430,4430,8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,9090,9091,9092,9093,9094,9095,9096,9097,9098,9099,1443,2443,3443,4443,5443,6443,7443,8443,9443,10443,11443,12443,13443,14443,15443,16443,17443,18443,19443,20443,21443,22443,23443,24443,25443,26443,27443,28443,29443,30443,31443,32443,33443,34443,35443,36443,37443,38443,39443,40443,41443,42443,43443,44443,45443,46443,47443,48443,49443,50443,51443,52443,53443,54443,55443,56443,57443,58443,59443,60443,61443,62443,63443,64443,65443,66443,67443,68443,69443,70443,71443,72443,73443,74443,75443,76443,77443,78443,79443,80443,81443,82443,83443,84443,85443,86443,87443,88443,89443,90443,91443,92443,93443,94443,95443,96443,97443,98443,99443,100443 >> infos/ports-subs.$target 2>/dev/null &
timeout 10 cmseek -u $sub --follow-redirect -r >> infos/cmseek-result-cms 2>/dev/null
echo $sub |waybackurls >> infos/waybackurls.$target 2>/dev/null &
echo $sub |hakrawler |grep "$sub" |awk -F / '{print $3}' >> infos/hakrawler.$target 2>/dev/null
#echo $sub |nuclei -c 50 -t /sec/root/nuclei-templates/cves/ >> infos/nuclei.$target 2>/dev/null &
timeout 10 cat infos/ports-subs.$target|httpx --silent |nuclei -c 50 -t /sec/root/nuclei-templates/cves/ >> infos/nuclei.$target 2>/dev/null 
timeout 20 cat subs/subs.$target |parallel -j50 "echo {} |asnmap -json -silent |jq" >> infos/asnmap.$target 2>/dev/null &
timeout 20 cat subs|subs.$target |parallel -j50 "echo {} |tlsx -silent -un -re -mm -ss -ex -ve -tps -wc -ja3 -jarm -hash md5,sha1,sha265 -tv -so" >> infos/tlsx.$target 2>/dev/null &
tail -f infos/*.$target &
done


for sub2 in `cat infos/httpxed.$target |awk -F '/' '{print $3}' |awk -F ' ' '{print $1}' |httpx --silent `
do
timeout 100 gospider -s "$sub2" >> infos/gospider.$target 2>/dev/null
#cat brute/allfiles |parallel -j50 "echo $sub2{} |httpx -sc -silent |egrep -v 404" >> infos/response-httpxed.$target
for target in `cat infos/httpxed.$target |awk -F ' ' '{print $1}' |cut -d '/' -f3|httpx --silent `
do
wapiti -u $target -v 2 >> infos/wapiti.$target &
echo "$target" |katana >> infos/katana.$target &
curl -ks "$target" |grep -Po "(\/)((?:[a-zA-Z\-_\r\.0-9\{\}]+))(\/)*((?:[a-zA-Z\-_\:\.0-9\{\}]+))(\/)((?:[a-zA-Z\-_\/\:\.0-9\{\}]+))" |egrep "$(echo $target |awk -F / '{print $3}')" |sort -u >> infos/regexedAPI.$target
tail -f infos/*.$target  &
echo "." > infos\js.txt
echo $target | httpx -mc 200 | tee subdomains.txt && cat subdomains.txt | waybackurls | httpx -mc 200 | grep .js | tee infos/js.txt
cat infos/js.txt | grep -r -E "aws_access_key|aws_secret_key|api key|passwd|pwd|heroku|slack|firebase|swagger|aws_secret_key|aws key|password|ftp password|jdbc|db|sql|secret jet|config|admin|pwd|json|gcp|htaccess|.env|ssh key|.git|access key|secret token|oauth_token|oauth_token_secret" >> infos/api-secrets-info-js.$target
nuclei -l infos/js.txt -t ~/nuclei-templates/exposures/ -o js_exposures_results-nuclei.$target
export scanJS=$(/tmp/jsearch)
python3 $scanJS/jsearch.py -u $target -n $target
done
done





fi
#####################################################################################################################




